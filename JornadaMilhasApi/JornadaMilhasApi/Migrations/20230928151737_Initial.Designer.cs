// <auto-generated />
using System;
using JornadaMilhasApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JornadaMilhasApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230928151737_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("JornadaMilhasApi.Models.Companhia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Companhias");
                });

            modelBuilder.Entity("JornadaMilhasApi.Models.Depoimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Depoimentos");
                });

            modelBuilder.Entity("JornadaMilhasApi.Models.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("JornadaMilhasApi.Models.Passagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanhiaId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Conexoes")
                        .HasColumnType("int");

                    b.Property<Guid>("DestinoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("OrigemId")
                        .HasColumnType("char(36)");

                    b.Property<int>("PrecoIda")
                        .HasColumnType("int");

                    b.Property<int>("PrecoVolta")
                        .HasColumnType("int");

                    b.Property<int>("TaxaEmbarque")
                        .HasColumnType("int");

                    b.Property<int>("TempoVoo")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanhiaId");

                    b.HasIndex("DestinoId");

                    b.HasIndex("OrigemId");

                    b.ToTable("Passagens");
                });

            modelBuilder.Entity("JornadaMilhasApi.Models.Promocao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Preco")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Promocoes");
                });

            modelBuilder.Entity("JornadaMilhasApi.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JornadaMilhasApi.Models.Passagem", b =>
                {
                    b.HasOne("JornadaMilhasApi.Models.Companhia", "Companhia")
                        .WithMany("Passagens")
                        .HasForeignKey("CompanhiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JornadaMilhasApi.Models.Estado", "Destino")
                        .WithMany("PassagensDestino")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JornadaMilhasApi.Models.Estado", "Origem")
                        .WithMany("PassagensOrigem")
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companhia");

                    b.Navigation("Destino");

                    b.Navigation("Origem");
                });

            modelBuilder.Entity("JornadaMilhasApi.Models.User", b =>
                {
                    b.HasOne("JornadaMilhasApi.Models.Estado", "Estado")
                        .WithMany("UserEstado")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("JornadaMilhasApi.Models.Companhia", b =>
                {
                    b.Navigation("Passagens");
                });

            modelBuilder.Entity("JornadaMilhasApi.Models.Estado", b =>
                {
                    b.Navigation("PassagensDestino");

                    b.Navigation("PassagensOrigem");

                    b.Navigation("UserEstado");
                });
#pragma warning restore 612, 618
        }
    }
}
